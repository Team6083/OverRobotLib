/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id 'java-library'
    id 'idea'
    id "edu.wpi.first.GradleRIO" version "2022.2.1"
    id 'maven-publish'
    id 'signing'
}

dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:23.0'
    testImplementation 'junit:junit:4.12'
}

repositories {
    mavenLocal()
    mavenCentral()
}

task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar, javadocJar
}

group = 'io.github.team6083'
version = '2022.1.0'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/team6083/overrobotlib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }

        maven {
            name = "ossrh"
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = project.findProperty('ossrh.username') ?: System.getenv('OSSRH_USERNAME')
                password = project.findProperty('ossrh.password') ?: System.getenv('OSSRH_PASSWORD')
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }

        mavenJava(MavenPublication) {
            pom {
                name = 'OverRobotLib'
                description = 'A robot library for FRC Team.'
                url = 'https://github.com/Team6083/OverRobotLib'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'team6083'
                        name = 'Team6083'
                        email = 'frc2016@my.cmsh.cyc.edu.tw'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/Team6083/OverRobotLib.git'
                    developerConnection = 'scm:git:https://github.com/Team6083/OverRobotLib'
                    url = 'https://github.com/Team6083/OverRobotLib'
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey") ?: System.getenv('signingKey')
    def signingPassword = findProperty("signingPassword") ?: System.getenv('signingPassword')
    useInMemoryPgpKeys(signingKey, signingPassword)

    sign configurations.archives
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
